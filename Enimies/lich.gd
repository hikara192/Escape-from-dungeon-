extends CharacterBody2D

var speed = 60.0
var gravity = ProjectSettings.get_setting("physics/2d/default_gravity")

var facing_right = true

# –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–¥–æ—Ä–æ–≤—å—è
var max_health = 50
var current_health = 50
var is_dead = false

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∞—Ç–∞–∫–∏
var is_attacking = false
var attack_damage = 20
var is_taking_damage = false  # –§–ª–∞–≥ –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–Ω–∞

func _ready():
	$AnimatedSprite2D.play("Run")
	add_to_group("enemies")
	
	current_health = max_health
	print("–í—Ä–∞–≥ —Å–æ–∑–¥–∞–Ω. –ó–¥–æ—Ä–æ–≤—å–µ: ", current_health)

func _physics_process(delta: float) -> void:
	if is_dead or is_taking_damage:  # –ù–µ –¥–≤–∏–≥–∞–µ–º—Å—è –≤–æ –≤—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–Ω–∞
		return
		
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta
		
	if !$RayCast2D.is_colliding() and is_on_floor():
		flip()
	
	# –ù–µ –¥–≤–∏–≥–∞–µ–º—Å—è –≤–æ –≤—Ä–µ–º—è –∞—Ç–∞–∫–∏
	if not is_attacking:
		velocity.x = speed
	else:
		velocity.x = 0
	
	move_and_slide()

func flip():
	if is_dead or is_attacking or is_taking_damage:
		return
		
	facing_right = !facing_right
	scale.x = abs(scale.x) * -1
	if facing_right:
		speed = abs(speed)
	else:
		speed = abs(speed) * -1

func _on_area_2d_body_entered(body: Node2D) -> void:
	if body.name == 'Player' and body.has_method("take_damage"):
		body.take_damage(20)

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–Ω–∞ –æ—Ç –∏–≥—Ä–æ–∫–∞
func take_damage(damage: int):
	if is_dead or is_taking_damage:
		return
	
	current_health -= damage
	print("–í—Ä–∞–≥ –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–Ω: ", damage, ". –ó–¥–æ—Ä–æ–≤—å–µ: ", current_health)
	
	# –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–Ω–∞
	play_damage_animation()
	
	if current_health <= 0:
		die()

# –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–Ω–∞
func play_damage_animation():
	is_taking_damage = true
	velocity.x = 0  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—Ä–æ–Ω–∞
	
	if $AnimatedSprite2D.sprite_frames.has_animation("Damage"):
		print("üí¢ –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–Ω–∞")
		$AnimatedSprite2D.play("Damage")
		# –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ —É—Ä–æ–Ω–∞
		await $AnimatedSprite2D.animation_finished
	else:
		# –ï—Å–ª–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ Damage –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ—Ä–æ—Ç–∫—É—é –ø–∞—É–∑—É
		print("‚ö†Ô∏è –ê–Ω–∏–º–∞—Ü–∏–∏ Damage –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ—Ä–æ—Ç–∫—É—é –ø–∞—É–∑—É")
		await get_tree().create_timer(0.3).timeout
	
	# –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ–±—ã—á–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
	is_taking_damage = false
	
	# –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –±–µ–≥–∞, –µ—Å–ª–∏ –Ω–µ —É–º–µ—Ä–ª–∏ –∏ –Ω–µ –∞—Ç–∞–∫—É–µ–º
	if not is_dead and not is_attacking:
		$AnimatedSprite2D.play("Run")

func die():
	is_dead = true
	speed = 0
	collision_layer = 0
	collision_mask = 0
	
	print("üíÄ –í—Ä–∞–≥ —É–º–∏—Ä–∞–µ—Ç!")
	
	if $AnimatedSprite2D.sprite_frames.has_animation("Death"):
		$AnimatedSprite2D.play("Death")
		await $AnimatedSprite2D.animation_finished
	else:
		await get_tree().create_timer(0.5).timeout
	
	queue_free()

# –ê–¢–ê–ö–ê –ü–†–ò –í–•–û–î–ï –ò–ì–†–û–ö–ê –í –ó–û–ù–£
func _on_attackarea_body_entered(body: Node2D) -> void:
	if body.is_in_group("player") and body.has_method("take_damage") and not is_attacking and not is_taking_damage:
		print("üéØ –ò–≥—Ä–æ–∫ –≤–æ—à–µ–ª –≤ –∑–æ–Ω—É –∞—Ç–∞–∫–∏!")
		start_attack(body)

# –ù–∞—á–∞—Ç—å –∞—Ç–∞–∫—É
func start_attack(player):
	is_attacking = true
	
	# –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∞—Ç–∞–∫–∏
	if $AnimatedSprite2D.sprite_frames.has_animation("Attack"):
		print("‚öîÔ∏è –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∞—Ç–∞–∫–∏")
		$AnimatedSprite2D.play("Attack")
		# –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –Ω–∞–Ω–µ—Å–µ–Ω–∏–µ–º —É—Ä–æ–Ω–∞
		await $AnimatedSprite2D.animation_finished
	else:
		print("‚ö†Ô∏è –ê–Ω–∏–º–∞—Ü–∏–∏ –∞—Ç–∞–∫–∏ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∞–π–º–µ—Ä")
		await get_tree().create_timer(0.5).timeout
	
	# –ù–∞–Ω–æ—Å–∏–º —É—Ä–æ–Ω –∏–≥—Ä–æ–∫—É
	if is_instance_valid(player) and player.has_method("take_damage"):
		print("üí• –ù–∞–Ω–æ—Å–∏–º —É—Ä–æ–Ω –∏–≥—Ä–æ–∫—É: ", attack_damage)
		player.take_damage(attack_damage)
	
	# –ó–∞–≤–µ—Ä—à–∞–µ–º –∞—Ç–∞–∫—É
	is_attacking = false
	print("‚úÖ –ê—Ç–∞–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
	
	# –í–û–ó–í–†–ê–©–ê–ï–ú –ê–ù–ò–ú–ê–¶–ò–Æ RUN –ü–û–°–õ–ï –ê–¢–ê–ö–ò
	if not is_dead and not is_taking_damage:
		$AnimatedSprite2D.play("Run")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
func _on_animated_sprite_2d_animation_finished():
	if $AnimatedSprite2D.animation == "Attack":
		print("–ê–Ω–∏–º–∞—Ü–∏—è –∞—Ç–∞–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
	elif $AnimatedSprite2D.animation == "Damage":
		print("–ê–Ω–∏–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
	elif $AnimatedSprite2D.animation == "Death":
		print("–ê–Ω–∏–º–∞—Ü–∏—è —Å–º–µ—Ä—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
		queue_free()
